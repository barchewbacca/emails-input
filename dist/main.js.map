{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/emails-input/emails-input.component.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Key","EMAIL_REGEX","EmailsInputComponent","_containerNode","event","keyCode","which","ENTER","COMMA","preventDefault","addEntity","_input","TAB","inputValue","BACKSPACE","lastEntity","_entityList","length","removeEntity","this","_renderComponent","_addEventListeners","componentNode","_createElement","COMPONENT_CLASSNAME","tabIndex","INPUT_CLASSNAME","Array","slice","attributes","filter","att","forEach","setAttribute","appendChild","parentNode","replaceChild","type","className","content","element","document","createElement","textContent","addEventListener","focus","classList","add","FOCUSED_CLASSNAME","remove","setTimeout","split","item","trim","_handleKeydown","entityValue","some","removeBtn","REMOVE_BUTTON_CLASSNAME","innerHTML","isValid","test","ENTITY_CLASSNAME","INVALID_CLASSNAME","entityNode","insertBefore","push","_addCallback","querySelectorAll","node","removeChild","_removeCallback","newEntityList","callback","emailsInputInstance","querySelector","addRandomBtn","mockRandomEmails","mockReplaceEmails","randomEmail","Math","floor","random","email","alert","getValidCountBtn","replaceAllBtn","replaceAll","onEntityAdded","entity","console","log","onEntityRemoved"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","enum Key {\n  BACKSPACE = 8,\n  TAB = 9,\n  ENTER = 13,\n  COMMA = 188,\n}\n\nconst SEPARATOR = ',';\n\nconst EMAIL_REGEX = /^\\S+@\\S+\\.\\S+$/;\n\nconst REMOVE_ICON =\n  '<svg width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8 0.8L7.2 0L4 3.2L0.8 0L0 0.8L3.2 4L0 7.2L0.8 8L4 4.8L7.2 8L8 7.2L4.8 4L8 0.8Z\" /></svg>';\n\nexport default class EmailsInputComponent {\n  static readonly COMPONENT_CLASSNAME = 'emails-input';\n  static readonly INPUT_CLASSNAME = 'emails-input__input';\n  static readonly ENTITY_CLASSNAME = 'emails-input__entity';\n  static readonly REMOVE_BUTTON_CLASSNAME = 'emails-input__entity-btn';\n  static readonly FOCUSED_CLASSNAME = 'is-focused';\n  static readonly INVALID_CLASSNAME = 'is-invalid';\n\n  /**\n   * Component node which contains the entities and the input.\n   * @type {HTMLElement}\n   * @memberof EmailsInputComponent\n   */\n  componentNode: HTMLElement;\n\n  /**\n   * The actual input which is responsible for adding and removing new entities.\n   * @private\n   * @type {HTMLInputElement}\n   * @memberof EmailsInputComponent\n   */\n  private _input: HTMLInputElement;\n\n  /**\n   * List containing all the added entities. Both valid and invalid.\n   * @private\n   * @type {string[]}\n   * @memberof EmailsInputComponent\n   */\n  private _entityList: string[] = [];\n\n  /**\n   * Callback which returns added entity value.\n   * @private\n   * @memberof EmailsInputComponent\n   */\n  private _addCallback: (entityValue: string) => string;\n\n  /**\n   * Callback which returns removed entity value.\n   * @private\n   * @memberof EmailsInputComponent\n   */\n  private _removeCallback: (entityValue: string) => string;\n\n  constructor(private _containerNode: HTMLElement) {\n    this._renderComponent();\n    this._addEventListeners();\n  }\n\n  /**\n   * Renders emails input component and the input inside of it.\n   * Replaces container node with the generated element.\n   */\n  private _renderComponent() {\n    this.componentNode = this._createElement('div', EmailsInputComponent.COMPONENT_CLASSNAME);\n    this.componentNode.tabIndex = 0;\n    this._input = this._createElement(\n      'input',\n      EmailsInputComponent.INPUT_CLASSNAME,\n    ) as HTMLInputElement;\n    Array.prototype.slice\n      .call(this._containerNode.attributes)\n      .filter((att) => att.name !== 'data-component')\n      .forEach((att) => this._input.setAttribute(att.name as string, att.value as string));\n    this.componentNode.appendChild(this._input);\n    this._containerNode?.parentNode?.replaceChild(this.componentNode, this._containerNode);\n  }\n\n  /**\n   * Utility method for creating an element.\n   * @param type HTML tag name.\n   * @param className Class name.\n   * @param content Text content.\n   */\n  private _createElement<K extends keyof HTMLElementTagNameMap>(\n    type: K,\n    className: string,\n    content?: string,\n  ): HTMLElement | HTMLInputElement {\n    const element = document.createElement(type);\n    element.className = className;\n\n    if (content) {\n      element.textContent = content;\n    }\n\n    return element;\n  }\n\n  /**\n   * Adds event listeners to the emails input.\n   */\n  private _addEventListeners() {\n    this.componentNode.addEventListener('focus', () => {\n      this._input.focus();\n      this.componentNode.classList.add(EmailsInputComponent.FOCUSED_CLASSNAME);\n    });\n\n    this._input.addEventListener('focus', () =>\n      this.componentNode.classList.add(EmailsInputComponent.FOCUSED_CLASSNAME),\n    );\n\n    this._input.addEventListener('blur', () => {\n      this.addEntity(this._input.value);\n      this.componentNode.classList.remove(EmailsInputComponent.FOCUSED_CLASSNAME);\n    });\n\n    this._input.addEventListener('paste', () =>\n      setTimeout(\n        () => this._input.value.split(SEPARATOR).forEach((item) => this.addEntity(item.trim())),\n        0,\n      ),\n    );\n\n    this._input.addEventListener('keydown', this._handleKeydown);\n  }\n\n  /**\n   * Handles keydown event.\n   * On pressing ENTER and COMMA adds entity to the emails input.\n   * On pressing TAB adds entity to the emails input. If the value in empty focus jumps to the next tabindex.\n   * On pressing BACKSPACE removes the last entity in the list.\n   * @private\n   * @memberof EmailsInputComponent\n   */\n  private _handleKeydown = (event: KeyboardEvent) => {\n    const key = event.keyCode || event.which;\n\n    switch (key) {\n      case Key.ENTER:\n      case Key.COMMA:\n        event.preventDefault();\n        this.addEntity(this._input.value);\n        break;\n      case Key.TAB:\n        const inputValue = this._input.value;\n\n        if (inputValue === '') {\n          return;\n        }\n\n        event.preventDefault();\n        this.addEntity(inputValue);\n        break;\n      case Key.BACKSPACE:\n        const lastEntity = this._entityList[this._entityList.length - 1];\n\n        if (this._input.value === '' && lastEntity) {\n          event.preventDefault();\n          this.removeEntity(lastEntity);\n        }\n        break;\n    }\n  };\n\n  /**\n   * Adds new entity to the emails input.\n   * @param entityValue Entity value that needs to be added to the emails input.\n   */\n  addEntity(entityValue: string) {\n    if (entityValue === '') {\n      return;\n    }\n\n    if (this._entityList.some((item) => item === entityValue)) {\n      return;\n    }\n\n    const removeBtn = this._createElement('button', EmailsInputComponent.REMOVE_BUTTON_CLASSNAME);\n    removeBtn.innerHTML = REMOVE_ICON;\n    removeBtn.addEventListener('click', () => this.removeEntity(entityValue));\n\n    const isValid = EMAIL_REGEX.test(entityValue);\n    let className = EmailsInputComponent.ENTITY_CLASSNAME;\n\n    if (!isValid) {\n      className += ` ${EmailsInputComponent.INVALID_CLASSNAME}`;\n    }\n\n    const entityNode = this._createElement('div', className, entityValue);\n    entityNode.appendChild(removeBtn);\n    this.componentNode.insertBefore(entityNode, this._input);\n    this._entityList.push(entityValue);\n    this._input.value = '';\n    this._addCallback?.(entityValue);\n  }\n\n  /**\n   * Removes existing entity from the emails input.\n   * @param entityValue Entity value that needs to be removed from the emails input.\n   */\n  removeEntity(entityValue: string) {\n    const entityNode = Array.prototype.slice\n      .call(this.componentNode.querySelectorAll(`.${EmailsInputComponent.ENTITY_CLASSNAME}`))\n      .filter((node) => node.textContent === entityValue)[0];\n    this.componentNode.removeChild(entityNode);\n    this._entityList = this._entityList.filter((item) => item !== entityValue);\n    this._removeCallback?.(entityValue);\n  }\n\n  /**\n   * Returns the list of all entities added to the emails-input. Both valid and invalid.\n   */\n  getEntities(): string[] {\n    return this._entityList;\n  }\n\n  /**\n   * Replaces all entities added to the emails-input with provided entity list.\n   * @param newEntityList A list of new entities that needs to be added to the emails input.\n   */\n  replaceAll(newEntityList: string[]) {\n    this._entityList.forEach((item) => this.removeEntity(item));\n    newEntityList.forEach((item) => this.addEntity(item.trim()));\n  }\n\n  /**\n   * Callback firing when the entity is added to the emails input.\n   * @param callback Callback handler function.\n   */\n  onEntityAdded(callback: any) {\n    this._addCallback = (entityValue: string) => callback(entityValue);\n  }\n\n  /**\n   * Callback firing when the entity is removed from the emails input.\n   * @param callback Callback handler function.\n   */\n  onEntityRemoved(callback: any) {\n    this._removeCallback = (entityValue: string) => callback(entityValue);\n  }\n}\n","import './index.scss';\n// import faker from 'faker';\nimport EmailsInputComponent from './components/emails-input/emails-input.component';\n\nconst emailsInput = document.querySelector('[data-component=\"emails-input\"]') as HTMLElement;\nconst emailsInputInstance = new EmailsInputComponent(emailsInput);\n\nconst addRandomBtn = document.querySelector('[data-component=\"add-random\"]');\nlet mockRandomEmails = [\n  'kawasaki@outlook.com',\n  'scarlet@msn.com',\n  'kmself@gmail.com',\n  'frederic@aol.com',\n  'stecoop@yahoo.com',\n  'rfoley@aol.com',\n  'mthurn@msn.com',\n  'gastown@att.net',\n  'jrifkin@icloud.com',\n  'smcnabb@optonline.net',\n  'avalon@msn.com',\n  'draper@live.com',\n];\nconst mockReplaceEmails = [...mockRandomEmails];\n// addEmailBtn?.addEventListener('click', () => emailsInputInstance.addEntity(faker.internet.email()));\naddRandomBtn?.addEventListener('click', () => {\n  const randomEmail = mockRandomEmails[Math.floor(Math.random() * mockRandomEmails.length)];\n  if (randomEmail) {\n    emailsInputInstance.addEntity(randomEmail);\n    mockRandomEmails = mockRandomEmails.filter((email) => email !== randomEmail);\n  } else {\n    alert('No random emails left!');\n  }\n});\n\nconst getValidCountBtn = document.querySelector('[data-component=\"get-valid-count\"]');\ngetValidCountBtn?.addEventListener('click', () =>\n  alert(\n    `Valid emails count: ${\n      emailsInputInstance.componentNode.querySelectorAll('.emails-input__entity:not(.is-invalid)')\n        .length\n    }`,\n  ),\n);\n\nconst replaceAllBtn = document.querySelector('[data-component=\"replace-all\"]');\nreplaceAllBtn?.addEventListener('click', () => emailsInputInstance.replaceAll(mockReplaceEmails));\n\nemailsInputInstance.onEntityAdded((entity: string) => console.log('Added:', entity));\nemailsInputInstance.onEntityRemoved((entity: string) => console.log('Removed:', entity));\n"],"sourceRoot":""}